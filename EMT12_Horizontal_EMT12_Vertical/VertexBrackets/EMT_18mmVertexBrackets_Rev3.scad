//Brackets to hold Horizontal 1/2" EMT to Vertex
//11/25/2016    By: David Bunch
//
Ht = 8;                     //Height of extrusion of Brackets
Bracket_Type = 0;           //0 = Simple Bracket to connect EMT to Vertex
                            //1 = Simple Extended Bracket
                            //2 = Bracket to connect EMT to Vertex & DoveTail Frame
                            //3 = Type 0 & 2
                            //4 = Type 0, 1 & 2
Qty = 2;                    //1 or 2 brackets
HoleID = 4.6;               //Diameter of hole, sized for M4 or #8 screw
ScrewHdDia = 7.8;           //Diameter of Screw Head
ScrewHd_Res = 36;           //Resolution of screw head
$fn=24;                     //Resolution of drill holes
//Bracket that holds 1/2" Horizontal EMT to Vertex with one screw & Locknut
module Bracket()
{
    translate([9.2+9,12.5,0])   //Move Origin to Center bottom 1/2" Horizontal EMT
                                //This makes it easier to add to an Assembly drawint
    difference()
    {
        linear_extrude(height = Ht, center = false, convexity = 10)polygon(points = 
        [[-27.59,-3.22],[-27.59,3.22],[-28.18,3.86],[-28.73,4.54],[-29.23,5.25],
        [-29.68,5.99],[-30.09,6.76],[-30.44,7.56],[-30.74,8.37],[-30.98,9.21],
        [-31.17,10.06],[-31.3,10.92],[-31.38,11.78],[-31.4,12.65],[-31.36,13.52],
        [-31.26,14.39],[-31.11,15.25],[-30.9,16.09],[-30.64,16.92],[-30.32,17.73],
        [-29.95,18.52],[-29.53,19.28],[-29.06,20.01],[-28.54,20.71],[-27.97,21.37],
        [-27.37,22],[-26.72,22.58],[-26.04,23.12],[-25.32,23.61],[-24.58,24.06],
        [-23.8,24.45],[-23,24.8],[-22.18,25.09],[-21.34,25.32],[-20.49,25.5],
        [-19.63,25.62],[-0.22,27.76],[0.62,27.68],[1.18,27.39],[1.62,26.95],
        [1.9,26.39],[2,25.77],[1.99,25.58],[0,4.93],[0,-16.7],
        [-4,-16.7],[-4,21.77],[-12.47,21.77],[-18.2,21.7],[-18.88,21.68],
        [-19.55,21.6],[-20.22,21.47],[-20.88,21.3],[-21.52,21.08],[-22.15,20.81],
        [-22.75,20.49],[-23.33,20.14],[-23.88,19.73],[-24.4,19.29],[-24.89,18.82],
        [-25.34,18.31],[-25.74,17.76],[-26.11,17.19],[-26.44,16.59],[-26.72,15.97],
        [-26.95,15.33],[-27.14,14.68],[-27.27,14.01],[-27.36,13.34],[-27.4,12.66],
        [-27.38,11.98],[-27.32,11.3],[-27.21,10.63],[-27.04,9.97],[-26.83,9.32],
        [-26.57,8.69],[-26.27,8.08],[-25.92,7.5],[-25.53,6.94],[-25.1,6.41],
        [-24.63,5.92],[-24.12,5.46],[-23.59,5.04],[-23.59,-5.04],[-24.16,-5.49],
        [-24.69,-5.98],[-25.18,-6.51],[-25.63,-7.08],[-26.04,-7.68],[-26.39,-8.31],
        [-26.69,-8.97],[-26.95,-9.65],[-27.14,-10.35],[-27.28,-11.06],[-27.37,-11.78],
        [-27.4,-12.5],[-27.37,-13.22],[-27.28,-13.94],[-27.14,-14.65],[-26.95,-15.35],
        [-26.69,-16.03],[-26.39,-16.69],[-26.04,-17.32],[-25.63,-17.92],[-25.18,-18.49],
        [-24.69,-19.02],[-24.69,-19.96],[-29.09,-19.96],[-29.5,-19.32],[-29.87,-18.66],
        [-30.21,-17.98],[-30.5,-17.28],[-30.76,-16.56],[-30.97,-15.83],[-31.14,-15.1],
        [-31.27,-14.35],[-31.35,-13.59],[-31.39,-12.84],[-31.39,-12.08],[-31.35,-11.32],
        [-31.26,-10.57],[-31.12,-9.82],[-30.95,-9.08],[-30.73,-8.35],[-30.47,-7.64],
        [-30.17,-6.94],[-29.83,-6.26],[-29.45,-5.61],[-29.04,-4.97],[-28.59,-4.36],
        [-28.1,-3.78]]);
        translate([0,0,Ht / 2])
        rotate([0,90,0])
        cylinder(d=HoleID,h=100,center=true);
        translate([-27.6,0,Ht / 2])
        rotate([0,-90,0])
        cylinder(d=ScrewHdDia,h=10,$fn=ScrewHd_Res);
    }
}
//Bracket that holds 1/2" Horizontal EMT to Vertex and Dovetail Frame with one screw & Locknut
module VertexFrameBracket()
{
    translate([9.2+9,12.5,0])   //Move Origin to Center bottom 1/2" Horizontal EMT
    difference()
    {
        linear_extrude(height = Ht, center = false, convexity = 10)polygon(points = 
        [[-27.59,-3.22],[-27.59,3.22],[-28.18,3.86],[-28.73,4.54],[-29.23,5.25],
        [-29.68,5.99],[-30.09,6.76],[-30.44,7.56],[-30.74,8.37],[-30.98,9.21],
        [-31.17,10.06],[-31.3,10.92],[-31.38,11.78],[-31.4,12.65],[-31.36,13.52],
        [-31.26,14.39],[-31.11,15.25],[-30.9,16.09],[-30.64,16.92],[-30.32,17.73],
        [-29.95,18.52],[-29.53,19.28],[-29.06,20.01],[-28.54,20.71],[-27.97,21.37],
        [-27.37,22],[-26.72,22.58],[-26.04,23.12],[-25.32,23.61],[-24.58,24.06],
        [-23.8,24.45],[-23,24.8],[-22.18,25.09],[-21.34,25.32],[-20.49,25.5],
        [-19.63,25.62],[-0.22,27.76],[0.62,27.68],[1.18,27.39],[1.62,26.95],
        [1.9,26.39],[2,25.77],[1.99,25.58],[4,10.26],[4,-16.7],
        [0,-16.7],[0,6.26],[-4,10.26],[-4,21.77],[-12.47,21.77],
        [-18.2,21.7],[-18.88,21.68],[-19.55,21.6],[-20.22,21.47],[-20.88,21.3],
        [-21.52,21.08],[-22.15,20.81],[-22.75,20.49],[-23.33,20.14],[-23.88,19.73],
        [-24.4,19.29],[-24.89,18.82],[-25.34,18.31],[-25.74,17.76],[-26.11,17.19],
        [-26.44,16.59],[-26.72,15.97],[-26.95,15.33],[-27.14,14.68],[-27.27,14.01],
        [-27.36,13.34],[-27.4,12.66],[-27.38,11.98],[-27.32,11.3],[-27.21,10.63],
        [-27.04,9.97],[-26.83,9.32],[-26.57,8.69],[-26.27,8.08],[-25.92,7.5],
        [-25.53,6.94],[-25.1,6.41],[-24.63,5.92],[-24.12,5.46],[-23.59,5.04],
        [-23.59,-5.04],[-24.16,-5.49],[-24.69,-5.98],[-25.18,-6.51],[-25.63,-7.08],
        [-26.04,-7.68],[-26.39,-8.31],[-26.69,-8.97],[-26.95,-9.65],[-27.14,-10.35],
        [-27.28,-11.06],[-27.37,-11.78],[-27.4,-12.5],[-27.37,-13.22],[-27.28,-13.94],
        [-27.14,-14.65],[-26.95,-15.35],[-26.69,-16.03],[-26.39,-16.69],[-26.04,-17.32],
        [-25.63,-17.92],[-25.18,-18.49],[-24.69,-19.02],[-24.69,-19.96],[-29.09,-19.96],
        [-29.5,-19.32],[-29.87,-18.66],[-30.21,-17.98],[-30.5,-17.28],[-30.76,-16.56],
        [-30.97,-15.83],[-31.14,-15.1],[-31.27,-14.35],[-31.35,-13.59],[-31.39,-12.84],
        [-31.39,-12.08],[-31.35,-11.32],[-31.26,-10.57],[-31.12,-9.82],[-30.95,-9.08],
        [-30.73,-8.35],[-30.47,-7.64],[-30.17,-6.94],[-29.83,-6.26],[-29.45,-5.61],
        [-29.04,-4.97],[-28.59,-4.36],[-28.1,-3.78]]);
        translate([0,0,Ht / 2])
        rotate([0,90,0])
        cylinder(d=HoleID,h=100,center=true);
        translate([-27.6,0,Ht / 2])
        rotate([0,-90,0])
        cylinder(d=ScrewHdDia,h=10,$fn=ScrewHd_Res);
    }
}
//Brackets that holds 1/2" Horizontal EMT to Vertex with two screws & Locknuts
//Used in conjunction with BracketCube()
module ExtBracket()
{
    difference()
    {
        linear_extrude(height = Ht, center = false, convexity = 10)polygon(points = 
        [[-27.59,-3.22],[-27.59,3.22],[-28.18,3.86],[-28.73,4.54],[-29.23,5.25],
        [-29.68,5.99],[-30.09,6.76],[-30.44,7.56],[-30.74,8.37],[-30.98,9.21],
        [-31.17,10.06],[-31.3,10.92],[-31.38,11.78],[-31.4,12.65],[-31.36,13.52],
        [-31.26,14.39],[-31.11,15.25],[-30.9,16.09],[-30.64,16.92],[-30.32,17.73],
        [-29.95,18.52],[-29.53,19.28],[-29.06,20.01],[-28.54,20.71],[-27.97,21.37],
        [-27.37,22],[-26.72,22.58],[-26.04,23.12],[-25.32,23.61],[-24.58,24.06],
        [-23.8,24.45],[-23,24.8],[-22.18,25.09],[-21.34,25.32],[-20.49,25.5],
        [-19.63,25.62],[-18.2,25.76],[-10,25.77],[-8,27.77],[-8,42.27],
        [-4,42.27],[-4,21.77],[-12.47,21.77],[-18.2,21.7],[-18.88,21.68],
        [-19.55,21.6],[-20.22,21.47],[-20.88,21.3],[-21.52,21.08],[-22.15,20.81],
        [-22.75,20.49],[-23.33,20.14],[-23.88,19.73],[-24.4,19.29],[-24.89,18.82],
        [-25.34,18.31],[-25.74,17.76],[-26.11,17.19],[-26.44,16.59],[-26.72,15.97],
        [-26.95,15.33],[-27.14,14.68],[-27.27,14.01],[-27.36,13.34],[-27.4,12.66],
        [-27.38,11.98],[-27.32,11.3],[-27.21,10.63],[-27.04,9.97],[-26.83,9.32],
        [-26.57,8.69],[-26.27,8.08],[-25.92,7.5],[-25.53,6.94],[-25.1,6.41],
        [-24.63,5.92],[-24.12,5.46],[-23.59,5.04],[-23.59,-5.04],[-24.16,-5.49],
        [-24.69,-5.98],[-25.18,-6.51],[-25.63,-7.08],[-26.04,-7.68],[-26.39,-8.31],
        [-26.69,-8.97],[-26.95,-9.65],[-27.14,-10.35],[-27.28,-11.06],[-27.37,-11.78],
        [-27.4,-12.5],[-27.37,-13.22],[-27.28,-13.94],[-27.14,-14.65],[-26.95,-15.35],
        [-26.69,-16.03],[-26.39,-16.69],[-26.04,-17.32],[-25.63,-17.92],[-25.18,-18.49],
        [-24.69,-19.02],[-24.69,-19.96],[-29.09,-19.96],[-29.5,-19.32],[-29.87,-18.66],
        [-30.21,-17.98],[-30.5,-17.28],[-30.76,-16.56],[-30.97,-15.83],[-31.14,-15.1],
        [-31.27,-14.35],[-31.35,-13.59],[-31.39,-12.84],[-31.39,-12.08],[-31.35,-11.32],
        [-31.26,-10.57],[-31.12,-9.82],[-30.95,-9.08],[-30.73,-8.35],[-30.47,-7.64],
        [-30.17,-6.94],[-29.83,-6.26],[-29.45,-5.61],[-29.04,-4.97],[-28.59,-4.36],
        [-28.1,-3.78]]);
        translate([0,0,Ht / 2])
        rotate([0,90,0])
        cylinder(d=HoleID,h=100,center=true);

        translate([-27.6,0,Ht / 2])
        rotate([0,-90,0])
        cylinder(d=ScrewHdDia,h=10,$fn=ScrewHd_Res);

        translate([0,35,Ht / 2])
        rotate([0,90,0])
        cylinder(d=HoleID,h=100,center=true);
    }
}
module Bump()
{
    translate([0,0,-3])
    cylinder(d1=0,d2=6,h=3.01,$fn=6);
    cylinder(d=6,h=20.8,$fn=6);
    translate([0,0,20.8])
    cylinder(d1=6,d2=0,h=3,$fn=6);
}
//Used in conjunction with ExtBracket()
module BracketCube()
{
    translate([-8,-25,4])
    rotate([0,0,90])
    rotate([-90,0,0])
    union()
    {
        difference()
        {
            translate([-7.25,0,0])
            cube([49.5,4,Ht]);
            translate([0,-1,Ht / 2])
            rotate([-90,0,0])
            cylinder(d=HoleID,h=30,$fn=24);
            translate([35,-1,Ht / 2])
            rotate([-90,0,0])
            cylinder(d=HoleID,h=30,$fn=24);
        }
        translate([7.1,0,Ht / 2])
        rotate([0,90,0])
        Bump();
    }
}
if (Bracket_Type == 0)
{
   for (n = [0,Qty - 1])
   {
        translate([0,n * 16,0])
        rotate([0,0,n * 180])
        translate([n * 6,0,0])
        Bracket();
   }
} else if (Bracket_Type == 1)
{
   for (n = [0,Qty - 1])
   { 
        rotate([0,0,n * 180])
        translate([n * 8,0,0])
        {
            BracketCube();
            translate([-9,0,0])
            rotate([0,0,180])
            ExtBracket();
        }
    }
} else if (Bracket_Type == 2) 
{
   for (n = [0,Qty - 1])
   {
        translate([n * 14,n * 12,0])
        rotate([0,0,n * 180])
        translate([n * 16,0,0])
        VertexFrameBracket();
   }
} else if (Bracket_Type == 3)
{
    Bracket();
    translate([-4,16,0])
    rotate([0,0,180])
    VertexFrameBracket();
} else if (Bracket_Type == 4)
{
    translate([-17,-6,0])
    Bracket();
    BracketCube();
    translate([-9,0,0])
    rotate([0,0,180])
    ExtBracket();
    translate([18,-6,0])
    VertexFrameBracket();
}